# Задача 7.
# Нужно вывести первые n строк треугольника Паскаля.
# В этом треугольнике на вершине и по бокам стоят единицы,
# а каждое число внутри равно сумме двух расположенных над ним чисел.

# Решение взято с TProger.ru https://tproger.ru/problems/python-3-exercises-for-beginners-geekbrains

# Заводим функцию, которая принимает в себя один аргумент - n.
# Этот аргумент отвечает за количество строк, которые нужно напечатать в треугольнике Паскаля.
def pascal_triangle(n):

    # Создаём список row, который инициализируется первым элементом треугольника Паскаля, равным 1.
    # Это первая строка треугольника.
    row = [1]

    # Создаём список y, который содержит один элемент - 0. Этот список будет использоваться для
    # дополнения строк, чтобы правильно вычислить значения в следующих строках треугольника.
    y = [0]

    # Начинаем цикл for, который будет выполняться n раз, или 0 раз, если n меньше 0.
    # max(n, 0) гарантирует, что цикл не будет выполняться, если n отрицательный.
    for x in range(max(n, 0)):

        # На каждой итерации цикла выводится текущая строка row.
        # Это позволяет нам видеть, как строится треугольник Паскаля.
        print(row)

        # Эта строка обновляет значение row, используя списковое выражение.
        # zip(row + y, y + row) создаёт пары элементов из двух списков:
        # row + y - это текущая строка row, дополненная нулём в конце (это нужно для вычисления след. строки).
        # y + row - это текущая строка row, дополненная нулём в начале.
        # Для каждой пары left и right их этих двух списков выполняется сложение left + right.
        # Это соответствует правилам треугольника Паскаля, где каждое число в следующей строке является
        # суммой двух чисел, стоящих над ним.
        row = [left + right for left, right in zip(row + y, y + row)]

# Выводим получившийся треугольник Паскаля на экран. 6 - это количество строк.
print('Задача 7, решение:')
pascal_triangle(6)