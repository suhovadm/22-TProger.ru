# Задача 7.
# Нужно вывести первые n строк треугольника Паскаля.
# В этом треугольнике на вершине и по бокам стоят единицы,
# а каждое число внутри равно сумме двух расположенных над ним чисел.

# Определяем функцию, которая принимает в себя один аргумент - n.
# Этот аргумент определяет количество строк, которые нужно сгенерировать в треугольнике Паскаля.
def pascal_triangle(n):

    # Создаём пустой список triangle, который будет использоваться для хранения строк
    # треугольника Паскаля.
    triangle = []

    # Цикл for будет выполняться n раз, где i будет принимать значения от 0 до n-1.
    # Каждое значение i соответствует номеру строки в треугольнике Паскаля.
    for i in range(n):

        # Внутри цикла мы создаём список row, который будет представлять текущую строку треугольника.
        # Он инициализируется нулями и имеет длину i + 1, чтобы вместить все элементы текущей строки.
        row = [0] * (i + 1)

        # Здесь мы устанавливаем первый и последний элементы текущей строки row равными 1, так как
        # в треугольнике Паскаля первая и последняя ячейки каждой строки равны 1.
        row[0], row[-1] = 1, 1

        # Внутренний цикл for будет выполняться для индексов j от 1 до i-1. Он отвечает за вычисление
        # значений внутренних элементов строки, которые не являются крайними.
        for j in range(1, i):

            # Здесь мы заполняем текущий элемент row[j] как сумму двух элементов из предыдущей строки triangle.
            # Это соответствует свойству треугольника Паскаля, где каждый элемент равен сумме двух элементов,
            # находящихся над ним.
            row[j] = triangle[i - 1][j - 1] + triangle[i - 1][j]

        # После заполнения всей строки row, мы добавляем её в общий список triangle, который содержит
        # все строки треугольника.
        triangle.append(row)

    # Завершаем выполнение функции и возвращаем сгенерированный треугольник Паскаля.
    return triangle

# Заводим функцию print_triangle, которая принимает один аргумент - triangle,
# представляющий треугольник Паскаля.
def print_triangle(triangle):

    # Здесь мы начинаем цикл по всем строкам в треугольнике triangle.
    for row in triangle:

        # В этой строке мы преобразуем каждую строку row в строку, соединяя элементы через пробел.
        # map(str, row) преобразует все числовые элементы в строки, а затем join объединяет их в одну строку
        # с пробелами между ними. После этого строка принтуется на экран.
        print(" ".join(map(str, row)))

# Запрос у пользователя ввод количества строк для треугольника Паскаля и преобразуем его в целое число (int),
# присваивая это значение переменной n.
n = int(input("Введите количество строк треугольника Паскаля:~$ "))

# Здесь мы вызываем функцию pascal_triangle с введённым пользователем количеством строк и сохраняем
# результат в переменной triangle.
triangle = pascal_triangle(n)

# Вызываем функцию print_triangle, чтобы вывести сгенерированный треугольник Паскаля на экран.
print('Задача 7, решение:')
print_triangle(triangle)
