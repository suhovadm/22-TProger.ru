# Задача 3. Создать словарь и отсортировать его в порядке возрастания и убывания.

# Шаг 1, создаём сам словарь.
my_dict = {
    'яблоко': 3,
    'банан': 1,
    'апельсин': 2,
    'груша': 4
}

# Шаг 2, сортируем содержимое словаря по ключам в порядке возрастания.
sorted_dict_up = dict(sorted(my_dict.items()))
print('Задача №3, решение: [словарь отсортированный по ключам в порядке возрастания]', sorted_dict_up)

# Шаг 3, сортируем содержимое словаря по ключам в порядке убывания.
sorted_dict_down = dict(sorted(my_dict.items(), reverse=True)) # здесь всё тоже самое, только добавляем reverse=True
print('Задача №3, решение: [словарь отсортированный по ключам в порядке убывания]', sorted_dict_down)

# Шаг 4, сортируем содержимое словаря по значениям в порядке возрастания.
sorted_by_value_up = dict(sorted(my_dict.items(), key=lambda item: item[1]))
print('Задача №3, решение: [словарь отсортированный по значениям в порядке возрастания]', sorted_by_value_up)

# Шаг 5, сортируем содержимое словаря по значениям в порядке убывания.
sorted_by_value_down = dict(sorted(my_dict.items(), key=lambda item: item[1], reverse=True))
print('Задача №3, решение: [словарь отсортированный по значениям в порядке убывания]', sorted_by_value_down)

# - Разберём код выше. -

# my_dict = { пары ключ:значение } - словарик с содержимым внутри.

# sorted внутри скобок - встроенная в Python функция, которая принимает итерируемый объект,
# в нашем случае пары ключ:значение и возвращает отсортированный список.

# my_dict.items() - метод items() возвращает представление всех пар ключ:значение
# в словаре my_dict. Это будет итерируемый объект, который содержит кортежи (неизменяемые списки),
# где первый элемент - это ключ, второй элемент - это значение.

# key=lambda item: item[1]
# параметр key указывает, по какому критерию будет происходить сортировка.
# В нашем случае анонимная функция (лямбда-функция), которая принимает один аргумент item,
# который представляет собой кортеж (пара ключ:значение).

# item[1] обращается ко второму элементу кортежа, то есть к значению, и именно по этому
# значению будет происходить сортировка. Таким образом, словарь будет отсортирован по
# значениям в порядке возрастания.

# dict(...)
# После сортировки sorted() возвращает список отсортированных пар (кортежей).
# Чтобы преобразовать этот список обратно в словарь, здесь используется конструктор dict(),
# который создаёт новый словарь из предоставленный пар.

# В итоге, результат выполнения всей операции присваивается переменной sorted_by_value_up,
# которая будет содержать новый словарь, отсортированный по значениям.