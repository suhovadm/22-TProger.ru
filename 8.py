# Задача 8.
# Напишите проверку на то, является ли строка палиндромом.
# Палиндром — это слово или фраза, которые одинаково читаются слева направо и справа налево.

# Заводим функцию, передаём в неё один аргумент - s.
# Это будет строка, которую мы хотим проверить на палиндромность.
def is_palindrome(s):

    # Очистка строки.

    # char.lower() for char in s - это генераторное выражение, которое проходит по каждому символу char
    # в строке s и преобразует его в нижний регистр.

    # if char.isalnum() - это условие, которое проверяет, является ли символ буквой или цифрвой.
    # Таким образом, пробелы и знаки препинания будут игнорироваться.

    # ''.join(...) - объединяет все отфильтрованные и преобразованные символы в одну строку,
    # результатом чего является строка cleaned_s, содержащая только буквы и цифры в нижнем регистре.
    cleaned_s = ''.join(char.lower() for char in s if char.isalnum())

    # cleaned_s[::-1] - это срез, который создаёт обратную версию строки cleaned_s.
    # return - вернёт нам True, если cleaned_s равно его обратной версии (т.е. строка является палиндромом),
    # и False в противном случае.
    return cleaned_s == cleaned_s[::-1]

# Список из тестовых строк. Они будут использоваться для проверки функции is_palindrome.
test_strings = [
    "А роза упала на лапу Азора",
    "Довод, что я не довод",
    "Лёша на полке клопа нашёл",
    "Привет, мир!"
]

print('Задача 8, решение:\n')

# Цикл, идущий по тестовым строкам. Этот цикл будет проходить по каждой строке test в списке test_strings.
for test in test_strings:

    # Для каждой строки test мы вызываем функцию is_palindrome и сохраняем результат (True или False)
    # в переменную result.
    result = is_palindrome(test)

    # Вывод результата.
    # Эта строка формирует и выводит строку, которая показывает, является ли текущая строка палиндромом,
    # используя f-строку для форматирования.
    print(f'"{test}" | Является палиндромом: {result}')

# Что такое f-строки ?
# f-строка (или форматированная строка) — это специальный синтаксис в Python,
# который позволяет легко и удобно вставлять значения переменных в строки.
# Она была введена в Python 3.6 и представляет собой строку, начинающуюся
# с буквы f или F, перед открывающей кавычкой.

# Основное назначение f-строк — упрощение и улучшение читабельности кода при форматировании строк.
# Вместо использования метода .format() или оператора %, f-строки позволяют вставлять
# выражения прямо внутри строки, обрамляя их фигурными скобками {}.

# Пример использования f-строки:
# name = "Alice"
# age = 30

# greeting = f"Hello, my name is {name} and I am {age} years old."
# print(greeting)